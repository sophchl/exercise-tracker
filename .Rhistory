# fetch the data needed
query <- sprintf("SELECT * FROM responses_main INNER JOIN responses_rest on responses_main.rowid = responses_rest.id WHERE responses_main.date >= %s AND responses_main.date <= %s",
date_range[1], date_range[2])
data <- dbGetQuery(db, query)
data$level
data
?factor
# plot data
data %>%
mutate(level = as.factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE)) %>%
ggplot(aes(x = date, y = level)) +
geom_line()
library(ggplot2)
# plot data
data %>%
mutate(level = as.factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE)) %>%
ggplot(aes(x = date, y = level)) +
geom_line()
data %>%
mutate(level = as.factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE))
data
plotExerciseLevels <- function(date_range) {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main INNER JOIN responses_rest on responses_main.rowid = responses_rest.id WHERE responses_main.date >= %s AND responses_main.date <= %s",
date_range[1], date_range[2])
data <- dbGetQuery(db, query)
# plot data
data %>%
mutate(level = as.factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE)) %>%
ggplot(aes(x = date, y = level)) +
geom_line()
# disconnect
dbDisconnect(db)
}
# disconnect
dbDisconnect(db)
rm(list = ls())
source('C:/Users/Sophia/Dropbox/01_Studium/04_projects/ShinyExercise/create_database.R', echo=TRUE)
sqlitePath <- "shiny-exercise/data/exerciseDB.db"
date_range <- c(Sys.Date() -10, Sys.Date())
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main INNER JOIN responses_rest on responses_main.rowid = responses_rest.id WHERE responses_main.date >= %s AND responses_main.date <= %s",
date_range[1], date_range[2])
data <- dbGetQuery(db, query)
data
# plot data
data %>%
mutate(level = as.factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE)) %>%
ggplot(aes(x = date, y = level)) +
geom_line()
data %>%
mutate(level = as.factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE))
# plot data
data %>%
mutate(level = factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE)) %>%
ggplot(aes(x = date, y = level)) +
geom_line()
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyExercise/helpers_rsqlite.R', echo=TRUE)
runApp('shiny-exercise')
date_range_level
sqlitePath <- "shiny-exercise/data/exerciseDB.db"
date_range <- c(Sys.Date() -10, Sys.Date())
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main INNER JOIN responses_rest on responses_main.rowid = responses_rest.id WHERE responses_main.date >= %s AND responses_main.date <= %s",
date_range[1], date_range[2])
data <- dbGetQuery(db, query)
data
date
dbGetQuery(SELECT * FROM responses_main)
dbGetQuery(db, "SELECT * FROM responses_main")
query
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main INNER JOIN responses_rest on responses_main.rowid = responses_rest.id WHERE responses_main.date >= date('%s') AND responses_main.date <= ('%s')",
date_range[1], date_range[2])
query
data <- dbGetQuery(db, query)
data
data$date %>% typeof()
# disconnect
dbDisconnect(db)
rm(list = ls())
source('C:/Users/Sophia/Dropbox/01_Studium/04_projects/ShinyExercise/create_database.R', echo=TRUE)
responses_main <- data.frame(date = date(),
duration = numeric(),
level = character()
)
source('C:/Users/Sophia/Dropbox/01_Studium/04_projects/ShinyExercise/create_database.R', echo=TRUE)
sqlitePath <- "shiny-exercise/data/exerciseDB.db"
date_range <- c(Sys.Date() -10, Sys.Date())
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main INNER JOIN responses_rest on responses_main.rowid = responses_rest.id WHERE responses_main.date >= date('%s') AND responses_main.date <= ('%s')",
date_range[1], date_range[2])
data <- dbGetQuery(db, query)
data$date %>% typeof()
data$date
data
# disconnect
dbDisconnect(db)
data
source('C:/Users/Sophia/Dropbox/01_Studium/04_projects/ShinyExercise/create_database.R', echo=TRUE)
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main INNER JOIN responses_rest on responses_main.rowid = responses_rest.id WHERE responses_main.date >= date('%s') AND responses_main.date <= ('%s')",
date_range[1], date_range[2])
data <- dbGetQuery(db, query)
# disconnect
dbDisconnect(db)
data$date
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyExercise/helpers_rsqlite.R', echo=TRUE)
shiny::runApp('shiny-exercise')
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main INNER JOIN responses_rest on responses_main.rowid = responses_rest.id WHERE responses_main.date >= date('%s') AND responses_main.date <= ('%s')",
date_range[1], date_range[2])
query
data <- dbGetQuery(db, query)
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
sqlitePath <- "shiny-exercise/data/exerciseDB.db"
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
data <- dbGetQuery(db, query)
data
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main INNER JOIN responses_rest on responses_main.rowid = responses_rest.id WHERE responses_main.date >= '%s' AND responses_main.date <= '%s'",
date_range[1], date_range[2])
data <- dbGetQuery(db, query)
data
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main INNER JOIN responses_rest on responses_main.rowid = responses_rest.id WHERE responses_main.date >= date('%s') AND responses_main.date <= date('%s')",
date_range[1], date_range[2])
data <- dbGetQuery(db, query)
data
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main WHERE responses_main.date >= date('%s') AND responses_main.date <= date('%s')",
date_range[1], date_range[2])
data <- dbGetQuery(db, query)
data
query
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main WHERE date >= date('%s') AND date <= date('%s')",
date_range[1], date_range[2])
data <- dbGetQuery(db, query)
data
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main WHERE date >= '%s' AND date <= '%s'",
date_range[1], date_range[2])
data <- dbGetQuery(db, query)
data
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
dbGetQuery(db, "SELECT * FROM responses_main")
dbGetQuery(db, "SELECT * FROM responses_main")$date
data$date %>% type()
data$date %>% typeof()
data$date %>% class()
data$date %>% as.Date()
data$date %>% ymd()
library(lubridate)
data$date %>% ymd()
as.numeric(as.Date("1910-01-04"))
data$date %>% class()
data$date %>% typeof()
data$date
data$date
data <- dbGetQuery(db, "SELECT * FROM responses_main")
data$date
data$date %>% as.Date()
data$date %>% ymd()
data$date %>% as.numeric() %>% as.Date()
data$date %>% typeof()
data$date %>% class()
runApp('shiny-exercise')
source('C:/Users/Sophia/Dropbox/01_Studium/04_projects/ShinyExercise/create_database.R', echo=TRUE)
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyExercise/helpers_rsqlite.R', echo=TRUE)
shiny::runApp('shiny-exercise')
qlitePath <- "shiny-exercise/data/exerciseDB.db"
type = "strength"
# Construct the update query by looping over the data fields
table_type <- paste("responses_", type, sep = "")
last_row_id <- dbGetQuery(db, "SELECT rowid FROM responses_main") %>% pull(rowid) %>% last()
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
sqlitePath <- "shiny-exercise/data/exerciseDB.db"
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the update query by looping over the data fields
table_type <- paste("responses_", type, sep = "")
data_cols <- c("id", names(data))
data_cols
rm(list = ls())
Sys.Date %>% as.numeric()
dbDisconnect(db)
Sys.Date() %>% as.numeric()
lubridate::origin
Sys.Date() %>% as.numeric() %>% as.Date()
Sys.Date() %>% as.numeric() %>% as.Date(origin = lubridate::origin)
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main INNER JOIN responses_rest on responses_main.rowid = responses_rest.id WHERE date >= '%s' AND date <= '%s'",
date_range[1] %>% as.numeric(), date_range[2] %>% as.numeric())
date_range <- c(Sys.Date() -10, Sys.Date())
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main INNER JOIN responses_rest on responses_main.rowid = responses_rest.id WHERE date >= '%s' AND date <= '%s'",
date_range[1] %>% as.numeric(), date_range[2] %>% as.numeric())
query
rm(list = ls())
source('C:/Users/Sophia/Dropbox/01_Studium/04_projects/ShinyExercise/create_database.R', echo=TRUE)
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyExercise/helpers_rsqlite.R', echo=TRUE)
runApp('shiny-exercise')
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyExercise/helpers_rsqlite.R', echo=TRUE)
runApp('shiny-exercise')
dbDisconnect(conn)
dbDisconnect(db)
rm(list = ls())
source('C:/Users/Sophia/Dropbox/01_Studium/04_projects/ShinyExercise/create_database.R', echo=TRUE)
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyExercise/helpers_rsqlite.R', echo=TRUE)
shiny::runApp('shiny-exercise')
source('C:/Users/Sophia/Dropbox/01_Studium/04_projects/ShinyExercise/create_database.R', echo=TRUE)
runApp('shiny-exercise')
values = c(Sys.Date()-7, Sys.Date())
values
date_range <- values
sqlitePath <- "data/exerciseDB.db"
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
sqlitePath <- "shiny-exercise/data/exerciseDB.db"
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main INNER JOIN responses_rest on responses_main.rowid = responses_rest.id WHERE date >= '%s' AND date <= '%s'",
date_range[1] %>% as.numeric(), date_range[2] %>% as.numeric())
data <- dbGetQuery(db, query)
data
data %>%
mutate(level = factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE),
date = as.Date(date, origin = lubridate::origin)) %>%
ggplot(aes(x = date, y = level)
)
data %>%
mutate(level = factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE),
date = as.Date(date, origin = lubridate::origin))
# plot data
plot <- data %>%
mutate(level = factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE),
date = as.Date(date, origin = lubridate::origin)) %>%
ggplot(aes(x = date, y = level)) +
geom_jitter() +
theme_minimal()
plot
# plot data
plot <- data %>%
mutate(level = factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE),
date = as.Date(date, origin = lubridate::origin)) %>%
ggplot(aes(x = date, y = level)) +
geom_bar() +
theme_minimal()
plot
# plot data
plot <- data %>%
mutate(level = factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE),
date = as.Date(date, origin = lubridate::origin)) %>%
ggplot(aes(x = date, y = level)) +
geom_bar() +
theme_minimal()
plot
# plot data
plot <- data %>%
mutate(level = factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE),
date = as.Date(date, origin = lubridate::origin)) %>%
ggplot(aes(x = date, y = level)) +
geom_col() +
theme_minimal()
plot
# plot data
plot <- data %>%
mutate(level = factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE),
date = as.Date(date, origin = lubridate::origin)) %>%
ggplot(aes(x = date, y = level)) +
geom_path() +
theme_minimal()
plot
# plot data
plot <- data %>%
mutate(level = factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE),
date = as.Date(date, origin = lubridate::origin)) %>%
ggplot(aes(x = date, y = level)) +
geom_point() +
theme_minimal()
plot
data
# plot data
plot <- data %>%
mutate(level = factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE),
date = as.Date(date, origin = lubridate::origin)) %>%
ggplot(aes(x = date, y = level)) +
geom_point(aes(size = duration)) +
theme_minimal()
plot
# disconnect
dbDisconnect(db)
source('C:/Users/Sophia/Dropbox/01_Studium/04_projects/ShinyExercise/create_database.R', echo=TRUE)
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyExercise/helpers_rsqlite.R', echo=TRUE)
runApp('shiny-exercise')
runApp('shiny-exercise')
runApp('shiny-exercise')
date_range <- values
sqlitePath <- "shiny-exercise/data/exerciseDB.db"
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main INNER JOIN responses_rest on responses_main.rowid = responses_rest.id WHERE date >= '%s' AND date <= '%s'",
date_range[1] %>% as.numeric(), date_range[2] %>% as.numeric())
data <- dbGetQuery(db, query)
# disconnect
dbDisconnect(db)
data
date_range[1]
date_range[1] %>% as.numeric()
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyExercise/helpers_rsqlite.R', echo=TRUE)
runApp('shiny-exercise')
data
date_range[1] %>% as.numeric()
date_range[2] %>% as.numeric()
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
dbGetQuery(SELECT * FROM responses_main)
data_test <- dbGetQuery(db, "SELECT * FROM responses_main")
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
sqlitePath <- "shiny-exercise/data/exerciseDB.db"
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
data_test <- dbGetQuery(db, "SELECT * FROM responses_main")
data_test
dbDisconnect(db)
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main INNER JOIN responses_rest on responses_main.rowid = responses_rest.id WHERE date >= %s AND date <= %s",
date_range[1] %>% as.numeric(), date_range[2] %>% as.numeric())
query
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main INNER JOIN responses_rest on responses_main.rowid = responses_rest.id WHERE responses_main.date >= %s AND responses_main.date <= %s",
date_range[1] %>% as.numeric(), date_range[2] %>% as.numeric())
data <- dbGetQuery(db, query)
data
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main INNER JOIN responses_rest on responses_main.rowid = responses_rest.id WHERE responses_main.date BETWEEN %s AND %s",
date_range[1] %>% as.numeric(), date_range[2] %>% as.numeric())
data <- dbGetQuery(db, query)
data
query
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main INNER JOIN responses_rest on responses_main.rowid = responses_rest.id WHERE date BETWEEN %s AND %s",
date_range[1] %>% as.numeric(), date_range[2] %>% as.numeric())
data <- dbGetQuery(db, query)
data
query
data_test
# fetch the data needed
query <- sprintf("SELECT * FROM responses_main WHERE date BETWEEN %s AND %s",
date_range[1] %>% as.numeric(), date_range[2] %>% as.numeric())
data <- dbGetQuery(db, query)
data
# plot data
plot <- data %>%
mutate(level = factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE),
date = as.Date(date, origin = lubridate::origin)) %>%
ggplot(aes(x = date, y = level)) +
geom_point(aes(size = duration, color = factor(type)), alpha = .5) +
theme_minimal()
plot
rm(list = ls())
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyExercise/helpers_rsqlite.R', echo=TRUE)
runApp('shiny-exercise')
source('C:/Users/Sophia/Dropbox/01_Studium/04_projects/ShinyExercise/create_database.R', echo=TRUE)
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyExercise/helpers_rsqlite.R', echo=TRUE)
shiny::runApp('shiny-exercise')
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyExercise/helpers_rsqlite.R', echo=TRUE)
runApp('shiny-exercise')
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyExercise/helpers_rsqlite.R', echo=TRUE)
runApp('shiny-exercise')
# plot data
plot <- data %>%
mutate(level = factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE),
date = as.Date(date, origin = lubridate::origin)) %>%
ggplot(aes(x = date, y = level)) +
geom_point(aes(color = factor(type)), alpha = .5, size = 8) +
theme_minimal()
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyExercise/helpers_rsqlite.R', echo=TRUE)
runApp('shiny-exercise')
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyExercise/helpers_rsqlite.R', echo=TRUE)
runApp('shiny-exercise')
shiny::runApp('shiny-exercise')
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyExercise/helpers_rsqlite.R', echo=TRUE)
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyExercise/helpers_rsqlite.R', echo=TRUE)
runApp('shiny-exercise')
runApp('C:/Users/Sophia/Dropbox/01_Studium/04_projects/ShinyExercise/shiny-exercise')
runApp('shiny-exercise')
runApp('shiny-exercise')
runApp('shiny-exercise')
runApp('shiny-exercise')
# plot data
plot <- data %>%
mutate(level = factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE),
date = as.Date(date, origin = lubridate::origin)) %>%
ggplot(aes(x = date, y = level)) +
geom_point(aes(color = factor(type)), alpha = .5, size = 8) +
ggtitle("Exercise Level over Time") +
theme_minimal()
runApp('shiny-exercise')
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyExercise/helpers_rsqlite.R', echo=TRUE)
runApp('shiny-exercise')
# plot data
plot <- data %>%
mutate(level = factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE),
date = as.Date(date, origin = lubridate::origin)) %>%
ggplot(aes(x = date, y = level)) +
geom_point(aes(color = factor(type)), alpha = .5, size = 8) +
ggtitle("Exercise Level over Time") +
scale_x_discrete("Date", breaks = data$date, labels = data$level %>% labels()) +
theme_minimal()
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyExercise/helpers_rsqlite.R', echo=TRUE)
runApp('shiny-exercise')
# plot data
plot <- data %>%
mutate(level = factor(level,
levels = c("very_low", "low", "medium", "high", "very_high", "extreme"),
labels = c("very low", "low", "medium", "high", "very high", "extreme"),
ordered = TRUE),
date = as.Date(date, origin = lubridate::origin)) %>%
ggplot(aes(x = date, y = level)) +
geom_point(aes(color = factor(type)), alpha = .5, size = 8) +
ggtitle("Exercise Level over Time") +
scale_x_continuous("Date", breaks = data$date, labels = data$level %>% labels()) +
theme_minimal()
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyExercise/helpers_rsqlite.R', echo=TRUE)
runApp('shiny-exercise')
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyExercise/helpers_rsqlite.R', echo=TRUE)
runApp('shiny-exercise')
