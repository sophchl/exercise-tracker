eval(call("<<-", as.name(responses_type), data))
}
}
loadDataMain <- function() {
if (exists("responses_main")) {
responses_main
}
}
loadDataType <- function(type) {
responses_type = paste("responses_", type, sep = "")
if (exists(responses_type)) {
as.name(responses_type)
}
}
shiny::runApp('shiny-exercise')
rm(list =ls())
runApp('shiny-exercise')
saveDataMain <- function(data) {
data <- as.data.frame(t(data))
if (exists("responses_main")) {
responses_main <<- rbind(responses_main, data)
} else {
responses_main <<- data
}
}
saveDataType <- function(data, type) {
responses_type = paste("responses_", type, sep = "")
data <- as.data.frame(t(data))
if (exists(responses_type)) {
eval(call("<<-", as.name(responses_type), eval(call("rbind", as.name(responses_type), data))))
} else {
eval(call("<<-", as.name(responses_type), data))
}
}
loadDataMain <- function() {
if (exists("responses_main")) {
responses_main
}
}
loadDataType <- function(type) {
responses_type = paste("responses_", type, sep = "")
if (exists(responses_type)) {
as.name(responses_type)
}
}
runApp('shiny-exercise')
rm(list = ls()9
rm(list = ls())
saveDataMain <- function(data) {
data <- as.data.frame(t(data))
if (exists("responses_main")) {
responses_main <<- rbind(responses_main, data)
} else {
responses_main <<- data
}
}
saveDataType <- function(data, type) {
responses_type = paste("responses_", type, sep = "")
data <- as.data.frame(t(data))
if (exists(responses_type)) {
eval(call("<<-", as.name(responses_type), eval(call("rbind", as.name(responses_type), data))))
} else {
eval(call("<<-", as.name(responses_type), data))
}
}
loadDataMain <- function() {
if (exists("responses_main")) {
responses_main
}
}
loadDataType <- function(type) {
responses_type = paste("responses_", type, sep = "")
if (exists(responses_type)) {
as.name(responses_type)
}
}
runApp('shiny-exercise')
rm(list = ls())
saveDataMain <- function(data) {
data <- as.data.frame(t(data))
if (exists("responses_main")) {
responses_main <<- rbind(responses_main, data)
} else {
responses_main <<- data
}
}
saveDataType <- function(data, type) {
responses_type = paste("responses_", type, sep = "")
data <- as.data.frame(t(data))
if (exists(responses_type)) {
eval(call("<<-", as.name(responses_type), eval(call("rbind", as.name(responses_type), data))))
} else {
eval(call("<<-", as.name(responses_type), data))
}
}
loadDataMain <- function() {
if (exists("responses_main")) {
responses_main
}
}
loadDataType <- function(type) {
responses_type = paste("responses_", type, sep = "")
if (exists(responses_type)) {
as.name(responses_type)
}
}
runApp('shiny-exercise')
library(RSQLite)
library(lubridate)
conn <- dbConnect(RSQLite::SQLite(), "shiny-exercise/data/exerciseDB.db")
responses_main <- data.frame(id = numeric(),
date = ymd(character()),
duration = dhours(numeric()),
level = factor(character())
)
responses_strength <- data.frame(id = numeric(),
muscle = factor(character()),
workout = character()
)
responses_endurance <- data.frame(id = numeric(),
endurance_type = factor(character()),
distance = numeric(),
place = character()
)
responses_other <- data.frame(id = numeric(),
other_type = factor(character()),
comment = character())
dbWriteTable(conn, "responses_main", responses_main)
dbWriteTable(conn, "responses_strength", responses_strength)
dbWriteTable(conn, "responses_endurance", responses_endurance)
dbWriteTable(conn, "responses_other", responses_other)
dbListTables(conn)
dbDisconnect(conn)
?sprintf
data = responses_main
query <- sprintf(
"INSERT INTO %s (%s) VALUES ('%s')",
table,
paste(names(data), collapse = ", "),
paste(data, collapse = "', '")
)
table_main <- "responses_main"
table_strength <- "responses_strength"
table_endurance <- "responses_endurance"
table_other <- "responses_other"
query <- sprintf(
"INSERT INTO %s (%s) VALUES ('%s')",
table_main,
paste(names(data), collapse = ", "),
paste(data, collapse = "', '")
)
query
names(data)
paste(data)
rm(list = ls())
sqlitePath <- "/data/exerciseDB.db"
table_main <- "responses_main"
table_strength <- "responses_strength"
table_endurance <- "responses_endurance"
table_other <- "responses_other"
saveDataMain <- function(data) {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the update query by looping over the data fields
query <- sprintf(
"INSERT INTO %s (%s) VALUES ('%s')",
table_main,
paste(names(data), collapse = ", "),
paste(data, collapse = "', '")
)
# Submit the update query and disconnect
dbGetQuery(db, query)
dbDisconnect(db)
}
saveDataType <- function(data, type) {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the update query by looping over the data fields
table_type <- paste("table_", type, sep = "")
query <- sprintf(
"INSERT INTO %s (%s) VALUES ('%s')",
as.name(type_type),
paste(names(data), collapse = ", "),
paste(data, collapse = "', '")
)
# Submit the update query and disconnect
dbGetQuery(db, query)
dbDisconnect(db)
}
loadDataMain <- function() {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the fetching query
query <- sprintf("SELECT * FROM %s", table_main)
# Submit the fetch query and disconnect
data <- dbGetQuery(db, query)
dbDisconnect(db)
data
}
loadDataType <- function(type) {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the fetching query
table_type <- paste("table_", type, sep = "")
query <- sprintf("SELECT * FROM %s", as.name(table_type))
# Submit the fetch query and disconnect
data <- dbGetQuery(db, query)
dbDisconnect(db)
data
}
runApp('shiny-exercise')
data = data.frame(matrix(c(1:4),2,2))
data
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
sqlitePath <- "data/exerciseDB.db"
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
sqlitePath <- "shiny-exercise/data/exerciseDB.db"
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
rm(list = ls())
## my helpers for saving in SQLite database ---------
sqlitePath <- "shiny-exercise/data/exerciseDB.db"
table_main <- "responses_main"
table_strength <- "responses_strength"
table_endurance <- "responses_endurance"
table_other <- "responses_other"
saveDataMain <- function(data) {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the update query by looping over the data fields
query <- sprintf(
"INSERT INTO %s (%s) VALUES ('%s')",
table_main,
paste(names(data), collapse = ", "),
paste(data, collapse = "', '")
)
# Submit the update query and disconnect
dbGetQuery(db, query)
dbDisconnect(db)
}
saveDataType <- function(data, type) {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the update query by looping over the data fields
table_type <- paste("table_", type, sep = "")
query <- sprintf(
"INSERT INTO %s (%s) VALUES ('%s')",
as.name(type_type),
paste(names(data), collapse = ", "),
paste(data, collapse = "', '")
)
# Submit the update query and disconnect
dbGetQuery(db, query)
dbDisconnect(db)
}
loadDataMain <- function() {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the fetching query
query <- sprintf("SELECT * FROM %s", table_main)
# Submit the fetch query and disconnect
data <- dbGetQuery(db, query)
dbDisconnect(db)
data
}
loadDataType <- function(type) {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the fetching query
table_type <- paste("table_", type, sep = "")
query <- sprintf("SELECT * FROM %s", as.name(table_type))
# Submit the fetch query and disconnect
data <- dbGetQuery(db, query)
dbDisconnect(db)
data
}
runApp('shiny-exercise')
dbDisconnect(db)
sqlitePath <- "shiny-exercise/data/exerciseDB.db"
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
dbDisconnect(db)
## my helpers for saving in SQLite database ---------
sqlitePath <- "data/exerciseDB.db"
table_main <- "responses_main"
table_strength <- "responses_strength"
table_endurance <- "responses_endurance"
table_other <- "responses_other"
saveDataMain <- function(data) {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the update query by looping over the data fields
query <- sprintf(
"INSERT INTO %s (%s) VALUES ('%s')",
table_main,
paste(names(data), collapse = ", "),
paste(data, collapse = "', '")
)
# Submit the update query and disconnect
dbGetQuery(db, query)
dbDisconnect(db)
}
saveDataType <- function(data, type) {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the update query by looping over the data fields
table_type <- paste("table_", type, sep = "")
query <- sprintf(
"INSERT INTO %s (%s) VALUES ('%s')",
as.name(type_type),
paste(names(data), collapse = ", "),
paste(data, collapse = "', '")
)
# Submit the update query and disconnect
dbGetQuery(db, query)
dbDisconnect(db)
}
loadDataMain <- function() {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the fetching query
query <- sprintf("SELECT * FROM %s", table_main)
# Submit the fetch query and disconnect
data <- dbGetQuery(db, query)
dbDisconnect(db)
data
}
loadDataType <- function(type) {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the fetching query
table_type <- paste("table_", type, sep = "")
query <- sprintf("SELECT * FROM %s", as.name(table_type))
# Submit the fetch query and disconnect
data <- dbGetQuery(db, query)
dbDisconnect(db)
data
}
runApp('shiny-exercise')
rm(list = ls())
## my helpers for saving in SQLite database ---------
sqlitePath <- "data/exerciseDB.db"
table_main <- "responses_main"
table_strength <- "responses_strength"
table_endurance <- "responses_endurance"
table_other <- "responses_other"
saveDataMain <- function(data) {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the update query by looping over the data fields
query <- sprintf(
"INSERT INTO %s (%s) VALUES ('%s')",
table_main,
paste(names(data), collapse = ", "),
paste(data, collapse = "', '")
)
# Submit the update query and disconnect
dbGetQuery(db, query)
dbDisconnect(db)
}
saveDataType <- function(data, type) {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the update query by looping over the data fields
table_type <- paste("table_", type, sep = "")
query <- sprintf(
"INSERT INTO %s (%s) VALUES ('%s')",
as.name(table_type),
paste(names(data), collapse = ", "),
paste(data, collapse = "', '")
)
# Submit the update query and disconnect
dbGetQuery(db, query)
dbDisconnect(db)
}
loadDataMain <- function() {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the fetching query
query <- sprintf("SELECT * FROM %s", table_main)
# Submit the fetch query and disconnect
data <- dbGetQuery(db, query)
dbDisconnect(db)
data
}
loadDataType <- function(type) {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the fetching query
table_type <- paste("table_", type, sep = "")
query <- sprintf("SELECT * FROM %s", as.name(table_type))
# Submit the fetch query and disconnect
data <- dbGetQuery(db, query)
dbDisconnect(db)
data
}
runApp('shiny-exercise')
sqlitePath <- "shiny-exercise/data/exerciseDB.db"
data = data.frame(matrix(c(1:4),2,2)
type = "strength"
data = data.frame(matrix(c(1:4),2,2))
type = "strength"
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the update query by looping over the data fields
table_type <- paste("table_", type, sep = "")
query <- sprintf(
"INSERT INTO %s (%s) VALUES ('%s')",
as.name(table_type),
paste(names(data), collapse = ", "),
paste(data, collapse = "', '")
)
tyble_type
table_type
as.name(table_type)
query <- sprintf(
"INSERT INTO %s (%s) VALUES ('%s')",
table_main,
paste(names(data), collapse = ", "),
paste(data, collapse = "', '")
)
query
query <- sprintf(
"INSERT INTO %s (%s) VALUES ('%s')",
table_type
paste(names(data), collapse = ", "),
paste(data, collapse = "', '")
)
query <- sprintf(
"INSERT INTO %s (%s) VALUES ('%s')",
table_type,
paste(names(data), collapse = ", "),
paste(data, collapse = "', '")
)
query
rm(list = ls())
loadDataType <- function(type) {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the fetching query
table_type <- paste("table_", type, sep = "")
query <- sprintf("SELECT * FROM %s", table_type)
# Submit the fetch query and disconnect
data <- dbGetQuery(db, query)
dbDisconnect(db)
data
}
## my helpers for saving in SQLite database ---------
# for testing
# sqlitePath <- "shiny-exercise/data/exerciseDB.db"
# data = data.frame(matrix(c(1:4),2,2))
# type = "strength"
sqlitePath <- "data/exerciseDB.db"
table_main <- "responses_main"
table_strength <- "responses_strength"
table_endurance <- "responses_endurance"
table_other <- "responses_other"
saveDataMain <- function(data) {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the update query by looping over the data fields
query <- sprintf(
"INSERT INTO %s (%s) VALUES ('%s')",
table_main,
paste(names(data), collapse = ", "),
paste(data, collapse = "', '")
)
# Submit the update query and disconnect
dbGetQuery(db, query)
dbDisconnect(db)
}
saveDataType <- function(data, type) {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the update query by looping over the data fields
table_type <- paste("table_", type, sep = "")
query <- sprintf(
"INSERT INTO %s (%s) VALUES ('%s')",
table_type,
paste(names(data), collapse = ", "),
paste(data, collapse = "', '")
)
# Submit the update query and disconnect
dbGetQuery(db, query)
dbDisconnect(db)
}
loadDataMain <- function() {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the fetching query
query <- sprintf("SELECT * FROM %s", table_main)
# Submit the fetch query and disconnect
data <- dbGetQuery(db, query)
dbDisconnect(db)
data
}
loadDataType <- function(type) {
# Connect to the database
db <- dbConnect(SQLite(), sqlitePath)
# Construct the fetching query
table_type <- paste("table_", type, sep = "")
query <- sprintf("SELECT * FROM %s", table_type)
# Submit the fetch query and disconnect
data <- dbGetQuery(db, query)
dbDisconnect(db)
data
}
runApp('shiny-exercise')
rm(list = ls())
dbDisconnect(db)
